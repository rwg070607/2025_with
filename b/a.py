# -*- coding: utf-8 -*-
"""Untitled15.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1phFmb0mDyNf_CTVMIgxkyJtQu0gLjyPE
"""

import os
from IPython.display import display, Javascript
import cv2
import numpy as np
from base64 import b64decode, b64encode
from PIL import Image
import io
from roboflow import Roboflow
from flask import Flask, render_template, jsonify, request

app = Flask(__name__)

rf = Roboflow(api_key="bMA4nKgMiJN7aXmWqJPZ")
project = rf.workspace("lll").project("with2")
model = project.version(2).model

def save_photo(data):
    filename = 'photo.jpg'
    header, encoded = data.split(',', 1)
    binary = b64decode(encoded)
    with open(filename, 'wb') as f:
        f.write(binary)
    return os.path.abspath(filename)

def receipt(path):
    path = save_photo(path)

    img = Image.open(path)

    results = model.predict(path, confidence=40, overlap=30).json()
    from collections import Counter

    predictions = results['predictions']
    counts = Counter([p['class'] for p in predictions])

    prices = {
        "Cacao Honey Dip Munchkin": 500,
        "Red Velvet Munchkin": 400,
        "Strawberry Munchkin": 300,
        "Bavarian Munchkin": 300,
        "Original Cake munchkin": 200,
    }

    total = 0
    receipt = "=== üç© Munchkin Receipt ===<br>"

    for bread, count in counts.items():
        unit_price = prices.get(bread, 0)
        subtotal = unit_price * count
        receipt += f"{bread:28} x {count} = {subtotal}Ïõê<br>"
        total += subtotal

    receipt += f"<br>Ï¥ù Ìï©Í≥Ñ: {total:,}Ïõê"
    return receipt


@app.route('/')
def main():
    return render_template('a.html')

@app.route('/data', methods = ['POST'])
def file():
    try:
        json_data = request.get_json()
        data = json_data['data']
        return jsonify({'data' : receipt(data)}), 200
    
    except Exception as e:
        return jsonify({'err' : str(e)}), 400

if __name__ == '__main__':
    app.run()